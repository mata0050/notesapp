{"version":3,"sources":["components/CreateNotes.tsx","components/Header.tsx","components/NotesCard.tsx","components/NotesList.tsx","App.tsx","index.tsx"],"names":["CreateNotes","notes","setNotes","useState","error","setError","titleRef","useRef","textRef","colorRef","Alert","variant","Form","className","onSubmit","e","preventDefault","current","value","id","Date","toString","title","text","color","date","handleSubmit","Group","controlId","Label","Control","type","placeholder","ref","as","rows","htmlFor","defaultValue","Button","Header","props","Navbar","fixed","bg","Container","Brand","NotesCard","note","handleDelete","Card","style","backgroundColor","Body","Title","Text","Subtitle","onClick","NotesList","filter","map","App","Row","Col","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ef6ddb1.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useRef, useState } from 'react';\nimport { Note } from '../models/note.model';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\ninterface ICreateNotesProps {\n  notes: Note[];\n  setNotes: React.Dispatch<React.SetStateAction<Note[]>>;\n}\n\nconst CreateNotes: React.FunctionComponent<ICreateNotesProps> = ({\n  notes,\n  setNotes,\n}) => {\n  const [error, setError] = useState<string>();\n  const titleRef = useRef<HTMLInputElement | null>(null);\n  const textRef = useRef<HTMLTextAreaElement | null>(null);\n  const colorRef = useRef<HTMLInputElement | null>(null);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (titleRef.current?.value === '' || textRef.current?.value === '')\n      return setError('All fields are mandatory');\n\n    setError('');\n    setNotes([\n      ...notes,\n      {\n        id: new Date().toString(),\n        title: (titleRef.current as HTMLInputElement).value,\n        text: (textRef.current as HTMLTextAreaElement).value,\n        color: (colorRef.current as HTMLInputElement).value,\n        date: new Date().toString(),\n      },\n    ]);\n\n    (titleRef.current as HTMLInputElement).value = '';\n    (textRef.current as HTMLTextAreaElement).value = '';\n  };\n\n  return (\n    <>\n      <h2>Create Note</h2>\n      {error && <Alert variant='danger'>{error}</Alert>}\n      <Form className='mt-3 mb-3' onSubmit={(e) => handleSubmit(e)}>\n        <Form.Group className='mb-3' controlId='formBasic'>\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter Title for the Note'\n            ref={titleRef}\n          />\n\n          <Form.Label>Text</Form.Label>\n          <Form.Control\n            placeholder='Enter Your Notes'\n            as='textarea'\n            rows={3}\n            ref={textRef}\n          />\n\n          <Form.Label htmlFor='colorInput'>Notes Color</Form.Label>\n          <Form.Control\n            type='color'\n            id='colorInput'\n            defaultValue='#777'\n            title='Choose your color'\n            ref={colorRef}\n          />\n\n          <Button type='submit' variant='primary'>\n            Submit\n          </Button>\n        </Form.Group>\n      </Form>\n    </>\n  );\n};\n\nexport default CreateNotes;\n","import * as React from 'react';\nimport {Navbar, Container} from 'react-bootstrap'\n\ninterface IHeaderProps {\n}\n\nconst Header: React.FunctionComponent<IHeaderProps> = (props) => {\n  return (\n      <Navbar fixed='top' bg='dark' variant='dark'>\n          <Container>\n              <Navbar.Brand>\n                  React TypeScript Bootstrap Tutorial\n              </Navbar.Brand>\n          </Container>\n      </Navbar>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Note } from '../models/note.model';\n\ninterface INotesCardProps {\n  note: Note,\n  handleDelete: (id: string) => void\n}\n\nconst NotesCard: React.FunctionComponent<INotesCardProps> = ({ note, handleDelete }) => {\n  return (\n    <div className='mb-3'>\n      <Card style={{ backgroundColor: note.color }}>\n        <Card.Body>\n          <Card.Title>{note.title}</Card.Title>\n          <Card.Text>{note.text}</Card.Text>\n          <Card.Subtitle className='text-muted'>{note.date}</Card.Subtitle>\n          <Button className='mt-3' variant='danger' onClick={() => handleDelete(note.id)}>\n            Delete\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default NotesCard;\n","import * as React from 'react';\n\nimport { Note } from '../models/note.model';\nimport NotesCard from './NotesCard';\n\ninterface INotesListProps {\n  notes: Note[];\n  setNotes: React.Dispatch<React.SetStateAction<Note[]>>;\n}\n\nconst NotesList: React.FC<INotesListProps> = ({ notes , setNotes}) => {\n  const handleDelete = (id: string) => {\n    setNotes(notes.filter((note) => note.id !== id));\n  };\n\n  const renderNotes = (): JSX.Element[] => {\n    return notes.map((note) => {\n      return (\n        <NotesCard key={note.id} note={note} handleDelete={handleDelete} />\n      );\n    });\n  };\n\n  return (\n    <>\n      <h2 className='mt-3'>Notes</h2>\n\n      <div>{renderNotes()}</div>\n    </>\n  );\n};\n\nexport default NotesList;\n","import React, { useState } from 'react';\nimport {Container, Row, Col} from 'react-bootstrap'\nimport './App.css';\nimport CreateNotes from './components/CreateNotes';\nimport Header from './components/Header';\nimport NotesList from './components/NotesList';\nimport { Note } from './models/note.model';\n\nfunction App() {\n  const [notes, setNotes] = useState<Note[]>([\n    {\n      id: new Date().toString(),\n      title: 'Meeeting',\n      text: 'Schedule meeting',\n      color: '#ddd',\n      date: new Date().toString(),\n    },\n  ]);\n\n  return (\n    <>\n      <Header />\n      <Container className='mt-5'>\n        <Row>\n          <Col>\n            <NotesList notes={notes} setNotes={setNotes} />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <CreateNotes notes={notes} setNotes={setNotes} />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}